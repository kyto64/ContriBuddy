name: Deploy to Fly.io

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create env file
        run: |
          touch backend/.env.production
          echo "NODE_ENV=production" >> backend/.env.production
          echo "PORT=3000" >> backend/.env.production
          echo "SERVICE_URL=${{ vars.SERVICE_URL }}" >> backend/.env.production
          echo "GH_CLIENT_ID=${{ secrets.GH_CLIENT_ID }}" >> backend/.env.production
          echo "GH_CLIENT_SECRET=${{ secrets.GH_CLIENT_SECRET }}" >> backend/.env.production
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env.production
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> backend/.env.production

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy backend to Fly.io
        run: flyctl deploy --remote-only
        working-directory: backend
        env:
          FLY_API_TOKEN: ${{ secrets.BACKEND_FLY_API_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create env file
        run: |
          touch frontend/.env.production
          echo "VITE_API_BASE_URL=${{ vars.API_URL }}" >> frontend/.env.production

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy frontend to Fly.io
        run: flyctl deploy --remote-only
        working-directory: frontend
        env:
          FLY_API_TOKEN: ${{ secrets.FRONTEND_FLY_API_TOKEN }}
